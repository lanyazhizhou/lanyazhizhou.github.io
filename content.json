[{"title":"Hello World","date":"2018-07-19T13:50:24.275Z","path":"2018/07/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"个人博客的测试","date":"2018-07-19T02:50:51.000Z","path":"2018/07/19/my-New-Post/","text":"因为关于hexo搭建GitHub博客的教程太多了，这里就不再一一叙述了，直接列出几个好的教程，大家自己看看吧： 安装git和node 史上最详细“截图”搭建Hexo博客并部署到Github 创建GitHub技术博客全攻略 Hexo搭建Github静态博客 大致流程当然，不过不想看网页教程，可以去B站看视频教程，上面介绍的还是挺详细的（一搜一大堆），大致步骤如下： 先下载git和node.js(里面自带npm) 注册一个GitHub账号，然后新建一个名字为yourname.github.io的仓库（注意这个名字一定不能改变，要一模一样，里面的yourname就是指你的GitHub账号名称） 利用git（这个要安装一下，相当于一个软件，直接百度搜一下）安装Hexo，并进行本地测试 本地测试好（也就是localhost界面没有问题），就可以部署到GitHub端了 买一个自己喜欢的域名（这一步可以省略，因为GitHub本身会给你一个域名，当然不是很好，属于自己的域名，听起来才吊啊，域名可以去万网购买） 在hexo众多主题中选择一个，然后针对这个主题进行优化 博客搜索引擎推广（这一步骤是让你的博客可以在浏览器上被搜索到） 遇到的坑git bash注意这是一个关于github的软件，帮助你来将本地仓库上传到GitHub中，需要自己下载，网上教程很多，这里遇到的一个问题是：git bash居然可以在一个文件夹直接右键打开，打开以后当前目录就自动跳转到那个文件夹中了，不用自己一个个cd的拼过去了 安装hexo不得不说，这是一个很大的坑，不知道是因为自己电脑版本的问题还是hexo更新的问题，我在第一步上就遇到了大问题，当时通过git bash来安装hexo，不断报错，当时看网上的教程都说非常容易，主要报错如下： 至今，我都不知道是什么原因，一开始我以为是node和npm安装错了，然后将node.js不断重新安装，目前找到了两种安装node.js的方法： 廖雪峰版简单粗暴(也就是直接安装) 将全局与缓存单独放在一起(将全局与缓存单独放在一起) 我后来安装就是用的第二种方法，这样自己找的时候非常容易，继续上面的问题，我重装了很多次node.js依然不行，最后找到了解决方法，就是进行npm安装命令的时候，在dos窗口（也就是cmd命令行窗口），在里面进行命令安装，结果显示一切OK！ 后来，除了最后的hexo clean，hexo g，hexo d和hexo s，其他命令我都是在dos窗口进行的 域名绑定问题我看网页的时候，看到很多人都是域名绑定是个大问题，但是我绑定的时候，就是一遍过，感觉还是挺简单的，我当时是参考如下： 如何利用github打造博客专属域名 这个域名绑定要看你自己的选择了，GitHub免费提供一个域名，当然是挂在GitHub下的子域名，你可以自己去买一个，根据域名后缀的不同，价格也是不同的，基本价格在5-80/每年，看自己的个人选择了。 hexo的命令基本命令如下： hexo new “postName” #新建文章 hexo new page “pageName” #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server） hexo deploy #将.deploy目录部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本 hexo deploy -g #生成加部署 hexo server -g #生成加预览 命令的简写: hexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy 这里要说一下，其中git g是在本地生成静态页面，然后放到public目录下，然后再git d，将public目录下的文件提交到GitHub中，我一开始以为会将根目录下所有文件都提交到GitHub中，结果我在GitHub中发现，里面的文件和我们根目录下的文件不一样。 这就造成了一个问题，如果我们换一台电脑，那么如何继续写博客呢，大致有两种方法，一个直接复制文件，一个是创建分支： 复制版 创建分支 我一般是通过复制来操作的，我会将文件上传到百度云盘，或者粘贴的云笔记中，到时候通过新电脑直接下载就可以了 另外一个问题是，git b的问题，原来我们上传文件到GitHub，先要git add，将目录文件添加到仓库，然后再提交，但是由于我们现在提交文件只需要提交public目录下，所以我们并不需要将所有文件都添加，我们在安装hexo的时候，也安装了一个插件，这个插件让我们可以通过hexo d命令就可以完成提交。 但是要注意：有时候，你会发现你的根目录下有的文件出现红色感叹号（表示没有提交到仓库），而不是绿色的对勾，这一点是很正常的，因为我们之前已经提到了，我们提交的不是全部文件，只是public目录而已，所以这一点很正常，我猜想这样做的原因是，保护我们的文件目录，如果我们提交所有的文件，那么其他人就可以直接拷走，然后进行修改了。 主题的选择一开始，我在hexo的众多主题中选择的时候，发现了好几个中意的选择，但是其中就是没有next，不过我在B站看视频教程的时候，却是发现几乎所有的视频教程都是选择next主题，然后进行优化的，并且在知乎上还有一个主题排行榜，上面排名第一的就是next，我当时很不理解，next不是很好看啊，界面很简洁，为什么那么多人喜欢呢？ 后来，我才发现原来是因为next主题的教程最多，自己几乎不用去看hexo模板里面的代码和结构，就可以进行一系列的优化，只需要按照教程一步步来就可以了。 我一开始，选择的是BlueLake，因为那个界面相当棒，我很喜欢（当然是优化过的），但是我找教程的时候，却只发现了一个教程，而且还是版本过时的教程，安装上面一部分操作不断出现bug，最后实在忍受不了了，直接更换了next主题。 事实证明：万事万物存在即是合理的，为什么next界面很简单，不是很好看，但是依然有那么多人喜欢呢，因为教程很多，有前人的经验指导，你可以不费什么力气，就能实现一个功能很全的个人博客网站，而且最后优化以后，也是很漂亮的！ 主题优化先抛出几个好的主题优化网页： 基本文献(介绍最基本的next主题优化) 进阶文献(打造炫酷网站，也是教程最多的，大都一样) 填坑(总概述，也是填坑) 加密(有几个配置不错) 评论系统(多个系统进行比较) 增加看板娘(看最后一个特效，看板娘就是左下角的动态图，有很多种哦) 我当时下载next主题的时候，看到了很多教程的，但是按照教程一步步来，却是出现了很多错误，错误原因在于版本问题，版本不一样，按照原来的样子，肯定会出错的。 随着版本的更新，其实很多优化效果，next模板中已经自带了，你只需要在主题配置中，将一些配置由false改为true就可以了，但是我一开始先按照教程增加了代码，但是后来发现和模板自带的特效发生了冲突，导致按照教程来，最后没有效果。 所以，建议一开始先看一下具体的版本，当然，你可以选择版本的，可以到下面网页选择自己适合的版本，这样就不用担心版本冲突问题了： next的不同版本","tags":[{"name":"hexo，个人博客，网站","slug":"hexo，个人博客，网站","permalink":"http://yoursite.com/tags/hexo，个人博客，网站/"}]},{"title":"个人博客的测试","date":"2018-07-19T02:50:51.000Z","path":"2018/07/19/test/","text":"测试格式怎么样 注释第一种方法；第一种注释方法，看看效果（开头加分号） 第二种方法：第二种注释方法，就是这样的效果（开头加冒号） 第三种方法&lt;！–这是注释文本，不会显示&gt; 代码代码块 hello world!hello world！hello world! 多层嵌套 地球 亚洲 中国 插入插入图片！示例1！示例2","tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]}]